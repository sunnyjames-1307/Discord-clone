{"ast":null,"code":"var _jsxFileName = \"T:\\\\clones\\\\discord-clone\\\\discord\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Chat from \"./components/Chat\";\nimport Sidebar from \"./components/Sidebar\";\nimport \"./App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport Login from \"./components/Login\";\nimport { auth } from \"./firebase\";\nimport { login, logout } from \"./features/userSlice\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    auth.onAuthStateChanged(authUser => {\n      console.log(\"user is\", authUser);\n\n      if (authUser) {\n        dispatch(login({\n          uid: authUser.uid,\n          photo: authUser.photoURL,\n          email: authUser.email,\n          displayName: authUser.displayName\n        }));\n      } else {\n        dispatch(logout());\n      }\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5J/jBDPxOCuWDcqNaifzAwnDqoU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["T:/clones/discord-clone/discord/src/App.js"],"names":["Chat","Sidebar","useDispatch","useSelector","selectUser","Login","auth","login","logout","useEffect","App","user","dispatch","onAuthStateChanged","authUser","console","log","uid","photo","photoURL","email","displayName"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,WAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,sBAA9B;AACA,SAASC,SAAT,QAA0B,OAA1B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,IAAI,GAAGR,WAAW,CAACC,UAAD,CAAxB;AACA,QAAMQ,QAAQ,GAAGV,WAAW,EAA5B;AAEAO,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,IAAI,CAACO,kBAAL,CAAyBC,QAAD,IAAc;AACpCC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,QAAvB;;AACA,UAAIA,QAAJ,EAAc;AACZF,QAAAA,QAAQ,CACNL,KAAK,CAAC;AACJU,UAAAA,GAAG,EAAEH,QAAQ,CAACG,GADV;AAEJC,UAAAA,KAAK,EAAEJ,QAAQ,CAACK,QAFZ;AAGJC,UAAAA,KAAK,EAAEN,QAAQ,CAACM,KAHZ;AAIJC,UAAAA,WAAW,EAAEP,QAAQ,CAACO;AAJlB,SAAD,CADC,CAAR;AAQD,OATD,MASO;AACLT,QAAAA,QAAQ,CAACJ,MAAM,EAAP,CAAR;AACD;AACF,KAdD;AAeD,GAhBQ,EAgBN,CAACI,QAAD,CAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACGD,IAAI,gBACH;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADG,gBAMH,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAlCQD,G;UACMP,W,EACID,W;;;KAFVQ,G;AAoCT,eAAeA,GAAf","sourcesContent":["import Chat from \"./components/Chat\";\nimport Sidebar from \"./components/Sidebar\";\nimport \"./App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectUser } from \"./features/userSlice\";\nimport Login from \"./components/Login\";\nimport { auth } from \"./firebase\";\nimport { login, logout } from \"./features/userSlice\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged((authUser) => {\n      console.log(\"user is\", authUser);\n      if (authUser) {\n        dispatch(\n          login({\n            uid: authUser.uid,\n            photo: authUser.photoURL,\n            email: authUser.email,\n            displayName: authUser.displayName,\n          })\n        );\n      } else {\n        dispatch(logout());\n      }\n    });\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      {user ? (\n        <>\n          <Sidebar />\n          <Chat />\n        </>\n      ) : (\n        <Login />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}