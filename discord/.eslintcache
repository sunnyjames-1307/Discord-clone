[{"T:\\clones\\discord-clone\\discord\\src\\index.js":"1","T:\\clones\\discord-clone\\discord\\src\\App.js":"2","T:\\clones\\discord-clone\\discord\\src\\components\\Sidebar.js":"3","T:\\clones\\discord-clone\\discord\\src\\components\\Sidebar_Channel.js":"4","T:\\clones\\discord-clone\\discord\\src\\components\\Chat.js":"5","T:\\clones\\discord-clone\\discord\\src\\components\\ChatHeader.js":"6","T:\\clones\\discord-clone\\discord\\src\\components\\Message.js":"7","T:\\clones\\discord-clone\\discord\\src\\features\\userSlice.js":"8","T:\\clones\\discord-clone\\discord\\src\\components\\Login.js":"9","T:\\clones\\discord-clone\\discord\\src\\app\\store.js":"10","T:\\clones\\discord-clone\\discord\\src\\firebase.js":"11","T:\\clones\\discord-clone\\discord\\src\\features\\appSlice.js":"12"},{"size":391,"mtime":1628423336197,"results":"13","hashOfConfig":"14"},{"size":1076,"mtime":1628423336245,"results":"15","hashOfConfig":"14"},{"size":4403,"mtime":1628425708949,"results":"16","hashOfConfig":"14"},{"size":913,"mtime":1628433984610,"results":"17","hashOfConfig":"14"},{"size":3402,"mtime":1628435512262,"results":"18","hashOfConfig":"14"},{"size":1908,"mtime":1628425364226,"results":"19","hashOfConfig":"14"},{"size":696,"mtime":1628429367458,"results":"20","hashOfConfig":"14"},{"size":480,"mtime":1628423336245,"results":"21","hashOfConfig":"14"},{"size":4589,"mtime":1628423890758,"results":"22","hashOfConfig":"14"},{"size":254,"mtime":1628405748443,"results":"23","hashOfConfig":"14"},{"size":596,"mtime":1628423651362,"results":"24","hashOfConfig":"14"},{"size":595,"mtime":1628425364254,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t6k0iv",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"T:\\clones\\discord-clone\\discord\\src\\index.js",[],"T:\\clones\\discord-clone\\discord\\src\\App.js",[],"T:\\clones\\discord-clone\\discord\\src\\components\\Sidebar.js",["53","54","55"],"import React, { useState } from \"react\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport SignalCellularAltIcon from \"@material-ui/icons/SignalCellularAlt\";\r\nimport styled from \"styled-components\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport Sidebar_Channel from \"./Sidebar_Channel\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport HeadsetIcon from \"@material-ui/icons/Headset\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport db, { auth } from \"../firebase\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction Sidebar() {\r\n  const [channels, setChannels] = useState([]);\r\n  const user = useSelector(selectUser);\r\n  useEffect(() => {\r\n    db.collection(\"channels\").onSnapshot((snapshot) =>\r\n      setChannels(\r\n        snapshot.docs.map((doc) => ({ id: doc.id, channel: doc.data() }))\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  const handleAddChannel = () => {\r\n    const channelName = prompt(\"Enter a new Channel Name\");\r\n\r\n    if (channelName) {\r\n      db.collection(\"channels\").add({\r\n        channelName: channelName,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Top>\r\n        <h3>Clever Programmer</h3>\r\n        <ExpandMoreIcon />\r\n      </Top>\r\n      <Channels>\r\n        <Channels_Header>\r\n          <Sidebar_Header>\r\n            <ExpandMoreIcon />\r\n            <h4>Text Channels</h4>\r\n          </Sidebar_Header>\r\n          <AddChannels onClick={handleAddChannel} />\r\n        </Channels_Header>\r\n        <div>\r\n          {channels.map(({ id, channel }) => (\r\n            <Sidebar_Channel\r\n              key={id}\r\n              id={id}\r\n              channelName={channel.channelName}\r\n            />\r\n          ))}\r\n        </div>\r\n      </Channels>\r\n      <Voice>\r\n        <VoiceIcon />\r\n        <VoiceInfo>\r\n          <h3>Voice Connected</h3>\r\n          <p>Stream</p>\r\n        </VoiceInfo>\r\n        <Icons>\r\n          <InfoOutlinedIcon />\r\n          <CallIcon />\r\n        </Icons>\r\n      </Voice>\r\n      <Profile>\r\n        <Avatar onClick={() => auth.signOut()} src={user.photo} />\r\n        <ProfileInfo>\r\n          <h3>{user.displayName}</h3>\r\n          <p>{user.uid.substring(0, 5)}</p>\r\n        </ProfileInfo>\r\n        <ProfileIcons>\r\n          <MicIcon />\r\n          <HeadsetIcon />\r\n          <SettingsIcon />\r\n        </ProfileIcons>\r\n      </Profile>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 0.25;\r\n  height: 100vh;\r\n  background-color: #2f3135;\r\n`;\r\nconst Top = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background-color: #2f3135;\r\n  color: rgb(249, 249, 249);\r\n  border-bottom: 3px solid #26282c;\r\n`;\r\n\r\nconst Channels = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst AddChannels = styled(AddIcon)`\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: white;\r\n  }\r\n`;\r\nconst Channels_Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  background-color: #2f3135;\r\n  color: gray;\r\n`;\r\nconst Sidebar_Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Voice = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: gray;\r\n  background-color: #2f3135;\r\n  padding: 10px;\r\n  border-top: 1px solid gray;\r\n`;\r\nconst VoiceIcon = styled(SignalCellularAltIcon)`\r\n  font-size: large;\r\n  color: #4fb185;\r\n`;\r\nconst VoiceInfo = styled.div`\r\n  padding: 10px;\r\n  flex: 1;\r\n  h3 {\r\n    color: #4fb185;\r\n    transform: translateY(13px);\r\n  }\r\n  p {\r\n    font-size: smaller;\r\n    padding-top: -2px;\r\n  }\r\n\r\n  .MuiSvgIcon {\r\n    padding: 10px;\r\n  }\r\n`;\r\nconst Icons = styled.div``;\r\nconst Profile = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: gray;\r\n  background-color: #2f3135;\r\n  padding: 10px;\r\n  border-top: 1px solid gray;\r\n`;\r\n\r\nconst ProfileInfo = styled.div`\r\n  padding: 10px;\r\n  flex: 1;\r\n  h3 {\r\n    color: #4fb185;\r\n    transform: translateY(13px);\r\n  }\r\n  .MuiSvgIcon {\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nconst ProfileIcons = styled.div``;\r\nexport default Sidebar;\r\n","T:\\clones\\discord-clone\\discord\\src\\components\\Sidebar_Channel.js",[],"T:\\clones\\discord-clone\\discord\\src\\components\\Chat.js",["56","57","58"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ChatHeader from \"./ChatHeader\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport CardGiftcardIcon from \"@material-ui/icons/CardGiftcard\";\r\nimport GifIcon from \"@material-ui/icons/Gif\";\r\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\r\nimport Message from \"./Message\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectUser } from \"../features/userSlice\";\r\nimport { selectChannelId, selectChannelName } from \"../features/appSlice\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport db from \"../firebase\";\r\n\r\nfunction Chat() {\r\n  const user = useSelector(selectUser);\r\n  const channelId = useSelector(selectChannelId);\r\n  const channelName = useSelector(selectChannelName);\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (channelId) {\r\n      db.collection(\"channels\")\r\n        .doc(channelId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [channelId]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"channels\").doc(channelId).collection(\"messages\").add({\r\n      timestamp: firebase.firestore.FieldValue.serverTimeStamp(),\r\n      message: input,\r\n      user: user,\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n  return (\r\n    <TChat>\r\n      <ChatHeader channelName={channelName} />\r\n      <Chat_messages>\r\n        {messages.map((message, index) => {\r\n          <Message\r\n            key={index}\r\n            timestamp={message.timestamp}\r\n            message={message.message}\r\n            user={message.user}\r\n          />;\r\n        })}\r\n      </Chat_messages>\r\n      <Chat_input>\r\n        <AddCircleIcon fontSize=\"large\" />\r\n        <form>\r\n          <input\r\n            disabled={!channelId}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder={\r\n              channelName\r\n                ? `Message #${channelName}`\r\n                : \"Please select a channel to send a message\"\r\n            }\r\n            type=\"text\"\r\n            value={input}\r\n          />\r\n          <button onClick={sendMessage} type=\"submit\">\r\n            Send Message\r\n          </button>\r\n        </form>\r\n        <InputIcons>\r\n          <CardGiftcardIcon />\r\n          <GifIcon fontSize=\"large\" />\r\n          <EmojiEmotionsIcon fontSize=\"large\" />\r\n        </InputIcons>\r\n      </Chat_input>\r\n    </TChat>\r\n  );\r\n}\r\n\r\nconst TChat = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 0.75;\r\n  background-color: #363a3f;\r\n  height: 100vh;\r\n`;\r\n\r\nconst Chat_messages = styled.div`\r\n  flex: 1;\r\n`;\r\nconst Chat_input = styled.div`\r\ncolor:lightgray;\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:space-between;\r\npadding:15px;\r\nborder-radius:5px;\r\nmargin-20px;\r\nborder-top:1px solid gray;\r\nbackground-color:#474b53;\r\n\r\nform{\r\n  flex:1;\r\n  input{\r\n    padding:15px;\r\n    background:transparent;\r\n    border:none;\r\n    width:100%;\r\n    overline-width:0;\r\n    color:white;\r\n    font-size:large;\r\n    }\r\n  button{\r\n    display:none;\r\n  }\r\n}`;\r\nconst InputIcons = styled.div`\r\n  .MuiSvgIcon-root {\r\n    padding: 5px;\r\n  }\r\n`;\r\n\r\nexport default Chat;\r\n","T:\\clones\\discord-clone\\discord\\src\\components\\ChatHeader.js",["59","60"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport EditLocationRoundedIcon from \"@material-ui/icons/EditLocationRounded\";\r\nimport PeopleAltRoundedIcon from \"@material-ui/icons/PeopleAltRounded\";\r\nimport SearchRoundedIcon from \"@material-ui/icons/SearchRounded\";\r\nimport HelpRoundedIcon from \"@material-ui/icons/HelpRounded\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nfunction ChatHeader({ channelName }) {\r\n  return (\r\n    <Chatheader>\r\n      <Header_left>\r\n        <h3>\r\n          <span>#</span>\r\n          {channelName}\r\n        </h3>\r\n      </Header_left>\r\n      <Header_right>\r\n        <NotificationsIcon />\r\n        <EditLocationRoundedIcon />\r\n        <PeopleAltRoundedIcon />\r\n        <Search>\r\n          <input placeholder=\"Search\" />\r\n          <SearchRoundedIcon />\r\n        </Search>\r\n        <SendRoundedIcon />\r\n        <HelpRoundedIcon />\r\n      </Header_right>\r\n    </Chatheader>\r\n  );\r\n}\r\n\r\nconst Chatheader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: gray;\r\n  padding: 10px;\r\n`;\r\nconst Header_left = styled.div`\r\n  span {\r\n    color: gray;\r\n    font-size: 30px;\r\n    padding: 10px;\r\n  }\r\n  h3 {\r\n    display: flex;\r\n    align-items: center;\r\n    color: white;\r\n  }\r\n`;\r\nconst Header_right = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex: 0.5;\r\n  justify-content: space-between;\r\n\r\n  .MuiSvgIcon-root {\r\n    padding: 5px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .MuiSvgIcon-root:hover {\r\n    color: red;\r\n  }\r\n`;\r\nconst Search = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: gray;\r\n  background-color: #2f3135;\r\n  border-radius: 3px;\r\n  padding: 3px;\r\n\r\n  input {\r\n    background: transparent;\r\n    outline-width: 0;\r\n    color: white;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport default ChatHeader;\r\n","T:\\clones\\discord-clone\\discord\\src\\components\\Message.js",[],"T:\\clones\\discord-clone\\discord\\src\\features\\userSlice.js",[],"T:\\clones\\discord-clone\\discord\\src\\components\\Login.js",[],"T:\\clones\\discord-clone\\discord\\src\\app\\store.js",[],"T:\\clones\\discord-clone\\discord\\src\\firebase.js",[],"T:\\clones\\discord-clone\\discord\\src\\features\\appSlice.js",[],{"ruleId":"61","severity":1,"message":"62","line":46,"column":9,"nodeType":"63","messageId":"64","endLine":46,"endColumn":26},{"ruleId":"61","severity":1,"message":"65","line":47,"column":11,"nodeType":"63","messageId":"64","endLine":47,"endColumn":27},{"ruleId":"61","severity":1,"message":"66","line":55,"column":13,"nodeType":"63","messageId":"64","endLine":59,"endColumn":15},{"ruleId":"61","severity":1,"message":"67","line":49,"column":7,"nodeType":"63","messageId":"64","endLine":49,"endColumn":22},{"ruleId":"68","severity":1,"message":"69","line":50,"column":40,"nodeType":"70","messageId":"71","endLine":50,"endColumn":42},{"ruleId":"61","severity":1,"message":"72","line":59,"column":7,"nodeType":"63","messageId":"64","endLine":59,"endColumn":19},{"ruleId":"61","severity":1,"message":"73","line":12,"column":7,"nodeType":"63","messageId":"64","endLine":12,"endColumn":20},{"ruleId":"61","severity":1,"message":"74","line":18,"column":7,"nodeType":"63","messageId":"64","endLine":18,"endColumn":21},"react/jsx-pascal-case","Imported JSX component Channels_Header must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Sidebar_Header must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Sidebar_Channel must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Chat_messages must be in PascalCase or SCREAMING_SNAKE_CASE","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Imported JSX component Chat_input must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Header_left must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Header_right must be in PascalCase or SCREAMING_SNAKE_CASE"]